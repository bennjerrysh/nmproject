<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.jhta.dao.ProductDAO">
	<select id="getAll" resultType="ProductDTO">
		select * from product
	</select>
	<!-- 검수안된것만 리스트 -->
	<select id="selectInsepection" resultType="ProductDTO">
		select * from product where inspection = 1
	</select>
	<!-- 검수반려된것만 리스트 -->
	<select id="rejectInsepection" resultType="ProductDTO">
		select * from product where inspection = -1
	</select>
	<!-- 반려메시지 리스트 -->
	<select id="selectRejectmessage" resultType="Rejected_messageDTO" parameterType="String">
		select * from rejected_message where nickname = #{nickname}
	</select>
	
	
	<select id="selectOneMj" parameterType="String" resultType="ProductDTO">
		select * from product where 1=1 
		
			<if test="keyword !=''">
				and title like CONCAT('%',#{keyword},'%')
			</if>
			<if test="from_date !=''">
				and regdate>=#{from_date}
			</if>
			<if test="to_date !=''">
				AND regdate &lt;= #{to_date}
			</if>
			<if test="inspection !='' and inspection == 0">
				and inspection = 0
			</if>	
			<if test="inspection !='' and inspection == 1">
				and inspection = 1
			</if>	
			<if test="inspection !='' and inspection == -1">
				and inspection = -1
			</if>	
	</select>
	<!-- 검수된것만리스트 -->
	<select id="selectinspection" parameterType="int" resultType="ProductDTO">
		select * from product where inspection = 0
	</select>
	
	<insert id="insertOne" parameterType="ProductDTO">
  		insert into product values(0, #{title}, #{contents}, #{regdate}, #{image}, #{detail_image}, #{price}, #{location}, #{person}, #{period}, #{report}, #{hits}, #{cateno}, #{like}, #{level}, #{nickname}, #{inspection} )
  	</insert>
  	
	<!-- 유저당 상품개수조회 -->
	<select id="countProduct" resultType="int" parameterType="String">
		SELECT count(*) FROM product P INNER JOIN users U ON P.nickname=U.nickname where P.nickname = #{nickname}
	</select>
	<!-- 유저당 상품조회수조회 -->
	<select id="countProductReview" resultType="int" parameterType="String">
		select sum(P.hits) FROM product P INNER JOIN users U ON P.nickname=U.nickname where P.nickname = #{nickname}
	</select>
	<!-- 유저당 상품신고수조회 -->
	<select id="countProductReport" resultType="int" parameterType="String">
		select sum(P.report) FROM product P INNER JOIN users U ON P.nickname=U.nickname where P.nickname = #{nickname}
	</select>
	<!-- 유저당 상품평점조회 -->
	<select id="countProductLike" resultType="float" parameterType="String">
		select AVG(P.like) FROM product P INNER JOIN users U ON P.nickname=U.nickname where P.nickname = #{nickname}
	</select>
	<!-- 찜한상품만가져오기 -->
	<select id="selectOneJjim" resultType="ProductDTO" parameterType="String">
  		SELECT * FROM product P INNER JOIN jjim J ON P.p_no=J.p_no where J.nickname = #{nickname};
  	</select>
  	<!-- 검수확인 수정 -->
  	<update id="inspectionmodifyOne" parameterType="Rejected_messageDTO">
				UPDATE product
				SET inspection = 0 
				WHERE p_no = #{p_no}
	</update>
  	<!-- 검수반려 수정 -->
  	<update id="rejectmodifyOne" parameterType="Rejected_messageDTO">
				UPDATE product
				SET inspection = -1 
				WHERE p_no = #{p_no}
	</update>
	<!-- 반려시 반려테이블에추가 -->
	<insert id="rejectinsertOne" parameterType="Rejected_messageDTO">
  		insert into rejected_message values(#{p_no}, #{nickname}, #{message} )
  	</insert>
  	
  	<!-- 판매상품리스트가져오기 -->
	<select id="salesList" resultType="PayDTO" parameterType="String">
  		SELECT * FROM orders where nickname = #{nickname};
  	</select>
  	
  	<!-- 차트값 -->
	<select id="salesListmonth" resultType="ChartDTO" parameterType="String">
  		SELECT DATE_FORMAT(pay_date,'%Y-%m') m, sum(price) as price FROM orders where nickname = #{nickname} GROUP BY m
  	</select>
  	<!-- 호스트정보 수정 -->
  	<update id="hostmodifyOne" parameterType="String">
				UPDATE users
				SET nickname=#{nickname}, email=#{email}, phone=#{phone}, field=#{field}, profileimage=#{profileimage}
				WHERE id = #{id}
	</update>
	<!-- 리뷰전체 -->
	<select id="showAllReview" resultType="ReviewDTO">
		select * from review
	</select>
	<!-- 검색리뷰 -->
	<select id="selectOneReview" parameterType="String" resultType="ReviewDTO">
		select * from review where 1=1 
		
			<if test="contents !=''">
				and contents like CONCAT('%',#{contents},'%')
			</if>
			<if test="writer !=''">
				and writer>=#{writer}
			</if>
	</select>
	
</mapper>
